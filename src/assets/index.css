@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');
@import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");

:root {
  --bs-body-font-family:
    Roboto,
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Oxygen,
    Ubuntu,
    Cantarell,
    "Fira Sans",
    "Droid Sans",
    "Helvetica Neue",
    sans-serif !important;
  --bs-body-font-size: 1.2rem !important;
  --navbar-height: 60px;
}

html,
body {
  max-width: 100%;
  overflow-x: hidden;
}

html {
  scrollbar-gutter: stable;
}

/* body, #root {
  min-height: 100vh;
} */

input:not([type="checkbox"]):not(.is-invalid):not(.is-valid),
textarea:not(.is-invalid):not(.is-valid),
select:not(.is-invalid):not(.is-valid) {
  color: inherit !important;
}

input:not([type="checkbox"]):not(.is-invalid):not(.is-valid),
textarea:not(.is-invalid):not(.is-valid),
select:not(.is-invalid):not(.is-valid) {
  color: inherit !important;
}

input:not([type="checkbox"]):not(.is-invalid):not(.is-valid):focus,
textarea:not(.is-invalid):not(.is-valid):focus,
select:not(.is-invalid):not(.is-valid):focus {
  border-color: var(--bs-primary) !important;
}

input:not([type="checkbox"]):is(.is-invalid),
textarea:is(.is-invalid),
select:is(.is-invalid) {
  color: var(--bs-danger-text-emphasis) !important;
  background-color: rgba(var(--bs-danger-rgb), 0.1) !important;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
  background-repeat: no-repeat;
  background-position: right calc(.375em + .1875rem) center;
  background-size: calc(.75em + .375rem) calc(.75em + .375rem);
  border-color: var(--bs-danger);
}

input:not([type="checkbox"]):is(.is-invalid):hover,
textarea:is(.is-invalid):hover,
select:is(.is-invalid):hover {
  border-color: var(--bs-danger) !important;
  box-shadow: 0 0 0 0.2rem rgba(var(--bs-danger-rgb), 0.25) !important;
}

input:not([type="checkbox"]):is(.is-valid),
textarea:is(.is-valid),
select:is(.is-valid) {
  color: var(--bs-success-text-emphasis) !important;
  background-color: rgba(var(--bs-success-rgb), 0.1) !important;
}

input:not([type="checkbox"]):is(.is-valid):hover,
textarea:is(.is-valid):hover,
select:is(.is-valid):hover {
  border-color: var(--bs-success) !important;
  box-shadow: 0 0 0 0.2rem rgba(var(--bs-success-rgb), 0.25) !important;
}

input[type="checkbox"],
select {
  cursor: pointer;
}

input:not([type="checkbox"])::placeholder,
textarea::placeholder,
select::placeholder {
  color: rgba(0, 0, 0, 0.2) !important;
}

input:not([type="checkbox"]):is(.is-invalid)::placeholder,
textarea:is(.is-invalid)::placeholder,
select:is(.is-invalid)::placeholder {
  color: rgba(var(--bs-danger-rgb), 0.2) !important;
}

input:not([type="checkbox"]):is(.is-valid)::placeholder,
textarea:is(.is-valid)::placeholder,
select:is(.is-valid)::placeholder {
  color: rgba(var(--bs-success-rgb), 0.2) !important;
}

.is-validation-message {
  color: var(--bs-danger);
}

.form-floating label {
  --bs-body-bg: transparent;
}

.form-floating label.required::after,
.form-floating.required label::after {
  content: "*";
  color: red;
  margin-left: 5px;
}

.btn-outline-primary:not(:hover),
.btn-outline-success:not(:hover),
.btn-outline-warning:not(:hover),
.btn-outline-danger:not(:hover),
.btn-outline-secondary:not(:hover) {
  background: white !important;
  overflow: hidden;
}

/* .row[class*="g-"]>[class^="col"],
.row[class*="gy-"]>[class^="col"] {
  padding-top: calc(var(--bs-gutter-y) / 2);
  padding-bottom: calc(var(--bs-gutter-y) / 2);
} */

.filter-shadow-sm {
  filter: drop-shadow(var(--bs-box-shadow-sm));
}

.filter-shadow {
  filter: drop-shadow(var(--bs-box-shadow));
}

.filter.shadow-lg {
  filter: drop-shadow(var(--bs-box-shadow-lg));
}

.filter.shadow-xl {
  filter: drop-shadow(var(--bs-box-shadow-xl));
}

.fade-animation {
  animation-name: fade;
  animation-duration: 0.25s;
  animation-timing-function: ease;
}

.fade-animation-reverse {
  animation-direction: reverse;
}

.fade-enter-active,
.fade-leave-active {
    transition: .35s ease;
}

.fade-leave-to,
.fade-enter-from {
    opacity: 0;
}

.fade-leave-from,
.fade-enter-to {
    opacity: 1;
}

@keyframes fade {
  from {
    opacity: 100%;
  }

  to {
    opacity: 0;
  }
}